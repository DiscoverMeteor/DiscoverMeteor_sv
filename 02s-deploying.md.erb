---
title: Driftsättning
slug: deploying
date: 0002/01/02
number: 2.5
sidebar: true
contents: Lära dig hur man driftsätter på Meteor.com.|Lära dig hur man driftsätter på Modulus.|Lära dig hur man driftsätter på din egen server med Meteor Up.
paragraphs: 46
---

Vissa personer gillar att jobba tyst på ett projekt tills det är perfekt, andra kan inte vänta med att visa världen så snart som möjligt.

Om du är den första typen av person och hellre utvecklar lokalt tills vidare, känn dig fri att hoppa över detta kapitel. Men om du å andra sidan gärna tar dig tid och lär dig hur man driftsätter din Meteor applikation online, så har vi det du behöver.

Vi kommer att lära oss hur man driftsätter en applikation på fem olika sätt. Känn dig fri att använda den du känner för oavsett var du är i din utvecklingsprocess, om du jobbar på Microscope eller någon annan Meteor applikation. Så låt oss komma igång!

<% note do %>

### Introduktion av sidofält

Detta är ett **sidofält**-kapitel. Sidofält tar en djupare inblick i mer generella Meteor-ämnen oberoende av resten av boken.

Så om du hellre fortsätter med att bygga Microscope, så kan du tryggt skippa detta tills vidare och komma tillbaka till det senare.

<% end %>

### Driftsättning på Meteor

Driftsättning på en Meteor subdomän (t.ex. `http://myapp.meteor.com`) är det enklaste valet, och kanske det första vi provar. Det kan vara användbart att förevisa din applikation till andra i dess tidiga dagar, eller för att enkelt sätta upp en stageserver.

Driftsättning på Meteor är ganska enkelt. Öppna helt enkelt din terminal, och gå till din Meteor-applikations katalog, och skriv:

~~~bash
$ meteor deploy myapp.meteor.com
~~~

Självklart måste du ta hand om att byta ut "myapp" med ett valfritt namn, föreslagsvis ett som inte redan används. Om detta är din första gång du driftsätter en applikation så kommer du att bli uppmanad om att skapa ett Meteor-konto. Om allt går bra så kommer du inom ett par sekunder kunna komma åt din applikation på `http://myapp.meteor.com`.

////

~~~~bash
$ meteor deploy myapp.meteor.com -p
~~~~

////

////

### Driftsättning på Modulus

////

<% note do %>

### Demeteorizer

////

<% end %>

////

~~~bash
$ npm install -g modulus
~~~

////

~~~bash
$ modulus login
~~~

////

~~~bash
$ modulus project create
~~~

////

////

~~~bash
$ modulus env set MONGO_URL "mongodb://<user>:<pass>@mongo.onmodulus.net:27017/<database_name>"
~~~

////

~~~bash
$ modulus deploy
~~~

////

### Meteor Up

////

////

////

////

### Installation av Meteor Up

////

~~~bash
$ npm install -g mup
~~~

////

////

////

~~~bash
$ mkdir ~/microscope-deploy
$ cd ~/microscope-deploy
$ mup init
~~~

<% note do %>

### Dela med Dropbox

////

<% end %>

### Meteor Up Konfiguration

////

////

////

~~~js
{
  //serverns autentiseringsinformation
  "servers": [{
    "host": "hostname",
    "username": "root",
    "password": "password"
    //or pem file (ssh based authentication)
    //"pem": "~/.ssh/id_rsa"
  }],

  //installera MongoDB på servern
  "setupMongo": true,

  //sökväg till applikationen (lokal katalog)
  "app": "/path/to/the/app",

  //konfigurera miljövariabler
  "env": {
    "ROOT_URL": "http://supersite.com"
  }
}
~~~
<%= caption "mup.json" %>

////

**Server Autentisering**

////

////

**MongoDB Konfiguration**

////

////

**Meteor Applikationssökväg**

////

**Miljövariabler**

////

### Uppsättning och driftsättning

////

~~~bash
$ mup setup
~~~

////

~~~bash
$ mup deploy
~~~

////

### Visa Loggar

////

~~~bash
$ mup logs -f
~~~

////

////
